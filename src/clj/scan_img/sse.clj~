(ns scan-img.sse
  (:require [ring.sse :as rsse]
            [clojure.core.async :as async]))


(def sse-handler
  (rsse/event-channel-handler
   (fn [request response raise out-ch]
     (async/go-loop [data (async/<! in-ch)]
       (when data
         (async/>! out-ch )
         (recur (async/<! in-ch)))))))



(def ac (async/chan))


(async/go
  (while true
    (println (async/<!! ac))))

(defn put-msg
  [msg]
  (async/go
    (async/>!! ac msg)))

;;---
(defn consumer
  [n]
  (async/go (println "Consumer " n (async/<! ac)))
  (async/go (println "Consumer " n (async/<! ac)))
  (async/go (println "Consumer " n (async/<! ac))))


(async/go
  (async/>! c "Item 1")
  (async/>! c "Item 2")
  (async/>! c "Item 3"))
